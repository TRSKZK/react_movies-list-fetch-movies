{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","getMovies","title","a","fetch","response","json","Response","Error","status","statusText","FindMovie","addMovie","useState","setTitle","setMovie","movieNotFound","setMovieNotFound","titleChanged","setTitleChanged","handleFindButton","movieFromServer","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","classNames","onChange","target","onClick","App","setMovies","find","currMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,8BACGA,GACC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,mCC7BDC,EAA8B,SAACC,GAC1C,IAAQC,EAAWD,EAAXC,OAER,OACE,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMW,c,uCCfd,SAAeC,EAAtB,kC,4CAAO,WAAyBC,GAAzB,iBAAAC,EAAA,sEACkBC,MAAM,8CAAD,OAA+CF,IADtE,cACCG,EADD,gBAEeA,EAASC,OAFxB,UAIkB,WAFjBjB,EAFD,QAIKkB,SAJL,sBAKG,IAAIC,MAAJ,6BAAgCH,EAASI,OAAzC,cAAqDJ,EAASK,aALjE,gCAQErB,GARF,4C,gCCUMsB,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOxB,EAAP,KAAc0B,EAAd,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAOMC,EAAgB,uCAAG,4BAAAjB,EAAA,+EAESF,EAAUC,GAFnB,QAEfmB,EAFe,UAKnBN,EAASM,GACTJ,GAAiB,GACjBE,GAAgB,IAPG,gDAUrBF,GAAiB,GACjBF,EAAS,MACTI,GAAgB,GAZK,yDAAH,qDAsBtB,OACE,qCACE,8CACA,uBACEG,SAVe,SAACC,GACpBA,EAAMC,iBACNV,EAAS,IACTF,EAASvB,IAQLC,UAAU,aAFZ,UAIE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQmC,QAAQ,cAAjC,wBAEE,qBAAKnC,UAAU,UAAf,SACE,uBACEoC,KAAK,OACLC,GAAG,cACHC,MAAO1B,EACP2B,YAAY,0BACZvC,UAAWwC,IAAW,QACpB,CAAE,aAAcZ,IAClBa,SA7CY,SAACR,GACzBT,EAASS,EAAMS,OAAOJ,OACtBT,GAAgB,WAgDTD,GAAgB7B,EAAQ,KACvB,mBAAGC,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,kBACV2C,QAAS,kBAAMb,KAHjB,4BASF,qBAAK9B,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACC0B,GAAkB,iDAClB3B,GAAU,cAAC,EAAD,CAAWA,MAAOA,WC7FxB6C,EAAgB,WAC3B,MAA4BrB,mBAAS,IAArC,mBAAOf,EAAP,KAAeqC,EAAf,KAYA,OACE,sBAAK7C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYQ,OAAQA,MAEtB,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CAAWsB,SAhBA,SAACvB,IACDA,GACXS,EAAOsC,MAAK,SAAAC,GAAS,OAAIA,EAAUrC,SAAWX,EAAMW,WAItDmC,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoBjD,gBCV9CkD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.76f88e73.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div>\n      {movie && (\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n              <img\n                src={movie.Poster}\n                alt=\"Film logo\"\n              />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <figure className=\"image is-48x48\">\n                  <img\n                    src=\"images/imdb-logo.jpeg\"\n                    alt=\"imdb\"\n                  />\n                </figure>\n              </div>\n              <div className=\"media-content\">\n                <p className=\"title is-8\">{movie.Title}</p>\n              </div>\n            </div>\n\n            <div className=\"content\">\n              {movie.Plot}\n              <br />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export async function getMovies(title:string) {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=bde4eea5&t=${title}`);\n  const movie = await response.json();\n\n  if (movie.Response === 'False') {\n    throw new Error(`Movie is not found ${response.status} - ${response.statusText}`);\n  }\n\n  return movie;\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovies } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieNotFound, setMovieNotFound] = useState(false);\n  const [titleChanged, setTitleChanged] = useState(true);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleChanged(true);\n  };\n\n  const handleFindButton = async () => {\n    try {\n      const movieFromServer = await getMovies(title);\n\n      if (movieFromServer) {\n        setMovie(movieFromServer);\n        setMovieNotFound(false);\n        setTitleChanged(true);\n      }\n    } catch (error) {\n      setMovieNotFound(true);\n      setMovie(null);\n      setTitleChanged(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setTitle('');\n    addMovie(movie as Movie);\n  };\n\n  return (\n    <>\n      <h1>Find a movie</h1>\n      <form\n        onSubmit={handleSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={title}\n                placeholder=\"Enter a title to search\"\n                className={classNames('input',\n                  { 'is-danger': !titleChanged })}\n                onChange={handleInputChange}\n              />\n            </div>\n          </label>\n\n          {titleChanged || movie ? null : (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => handleFindButton()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieNotFound && (<h1>Movie not found</h1>)}\n        {movie && (<MovieCard movie={movie as Movie} />)}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([] as Movie[]);\n\n  const addMovie = (movie: Movie) => {\n    const canAdd = movie\n      ? movies.find(currMovie => currMovie.imdbID === movie.imdbID)\n      : true;\n\n    if (!canAdd) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}